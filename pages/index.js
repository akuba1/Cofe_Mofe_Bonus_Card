import { useState } from 'react'

export default function Home() {
  const [phone, setPhone] = useState('')
  const [name, setName]   = useState('')
  const [status, setStatus] = useState(null)
  const [loading, setLoading] = useState(false)
  const [error, setError]   = useState('')

  const handleSubmit = async e => {
    e.preventDefault()
    setError('')
    setLoading(true)
    try {
      const res = await fetch('/api/purchase', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ phone, name })
      })
      const json = await res.json()
      if (!res.ok) throw new Error(json.error || 'Error')
      setStatus(json)
    } catch (err) {
      setError(err.message)
    } finally {
      setLoading(false)
    }
  }

  if (status) {
    return (
      <main style={{ padding: 16 }}>
        <h1>–í–∞—à –±–æ–Ω—É—Å-—Å—Ç–∞—Ç—É—Å</h1>
        <p>–ö–ª–∏–µ–Ω—Ç: {status.name || status.phone}</p>
        <p>–ü–æ–∫—É–ø–æ–∫: {status.purchases}</p>
        <p>–î–æ –±–æ–Ω—É—Å–∞ –æ—Å—Ç–∞–ª–æ—Å—å: {status.remaining}</p>
        {status.hasBonus && <p>üéâ –ë–æ–Ω—É—Å–Ω—ã–π –∫–æ—Ñ–µ –≥–æ—Ç–æ–≤!</p>}
        <button onClick={() => window.location.reload()}>–ù–æ–≤–∞—è –æ—Ç–º–µ—Ç–∫–∞</button>
      </main>
    )
  }

  return (
    <main style={{ padding: 16 }}>
      <h1>–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏</h1>
      <p>–°–æ–≤–µ—Ä—à–∏—Ç–µ 6 –ø–æ–∫—É–ø–æ–∫ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å–Ω—ã–π –∫–æ—Ñ–µ.</p>
      <form onSubmit={handleSubmit}>
        <input
          type="tel"
          placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω"
          value={phone}
          onChange={e => setPhone(e.target.value)}
          required
        />
        <input
          type="text"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
          value={name}
          onChange={e => setName(e.target.value)}
        />
        <button type="submit" disabled={loading}>
          {loading ? '–û—Ç–º–µ—á–∞–µ–º‚Ä¶' : '–û—Ç–º–µ—Ç–∏—Ç—å –ø–æ–∫—É–ø–∫—É'}
        </button>
      </form>
      {error && <p style={{ color: 'red' }}>{error}</p>}
    </main>
)
}
